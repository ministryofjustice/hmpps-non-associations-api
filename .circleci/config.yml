version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8

parameters:
  alerts-slack-channel:
    type: string
    default: dps_alerts_security
  releases-slack-channel:
    type: string
    default: dps-releases

  java-version:
    type: string
    default: "21.0"
  postgres-version:
    type: string
    default: "15"
  localstack-version:
    type: string
    default: "3"

jobs:
  validate:
    executor:
      name: hmpps/java_localstack_postgres
      jdk_tag: << pipeline.parameters.java-version >>
      localstack_tag: << pipeline.parameters.localstack-version >>
      services: "sns,sqs"
      postgres_tag: << pipeline.parameters.postgres-version >>
      postgres_username: "non_associations"
      postgres_password: "non_associations"
      postgres_db: "non_associations"
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - hmpps/wait_till_ready_postgres
      - run:
          name: Run check
          command: ./gradlew check
#          name: Run check & send results to sonarcloud
#          command: |
#            export GRADLE_OPTS="--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED"
#            ./gradlew check sonar --info
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
#      - store_artifacts:
#          path: build/reports/jacoco/test/html

  test-node-client:
    parameters:
      node-version:
        type: string
    executor:
      name: hmpps/node
      tag: << parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - restore_cache:
          key: dependency-cache-node<< parameters.node-version >>-{{ checksum "clients/node/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            cd clients/node
            npm clean-install --no-audit
      - save_cache:
          key: dependency-cache-node<< parameters.node-version >>-{{ checksum "clients/node/package-lock.json" }}
          paths:
            - clients/node/node_modules
      - run:
          name: Type-check node client library
          command: |
            cd clients/node
            npm run build
      - run:
          name: Lint node client library
          command: |
            cd clients/node
            npm run lint
      - run:
          name: Test node client library
          command: |
            cd clients/node
            npm run test
      - store_test_results:
          path: clients/node/test_results/junit.xml
      - store_artifacts:
          path: clients/node/test_results/junit.xml

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - test-node-client:
          matrix:
            parameters:
              node-version: ["18.19", "20.11"]
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context:
            - hmpps-common-vars
            - hmpps-non-associations-api-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-non-associations-api-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "11 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
          jdk_tag: << pipeline.parameters.java-version >>
          cache_key: v2
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
            - veracode-credentials
  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
